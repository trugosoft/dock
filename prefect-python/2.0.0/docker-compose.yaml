version: '3.5'

networks:
  prefect:
    name: prefect


services:
  # --------------------------------------#
  #               Postgres                #
  # --------------------------------------#
  #postgres:
  #  image: postgres:14
  #  command:
  #    - postgres
  #    - -c
  #    - max_connections=150
  #  environment:
  #    POSTGRES_USER: prefect
  #    POSTGRES_PASSWORD: test-password
  #    POSTGRES_DB: prefect_server
  #  healthcheck:
  #    interval: 10s
  #    retries: 60
  #    start_period: 2s
  #    test: pg_isready -q -d $${POSTGRES_DB} -U $${POSTGRES_USER} | grep "accepting connections" || exit 1
  #    timeout: 2s
  #  ports:
  #  - published: 5433
  #    target: 5432
  #  restart: on-failure
  #  volumes:
  #    - ./volumes/postgres:/var/lib/postgresql/data
  #  networks:
  #    - prefect
  # --------------------------------------#
  #             Prefect Server            #
  # --------------------------------------#
  prefect-server:
    image: sathyamurthyb4u/prefect-local:2.0.0
    command:
      - prefect
      - orion
      - start
    ports:
      - 4200:4200
    volumes:
      - /prefect:/root/.prefect
      - /flows:/flows
    environment:
      PREFECT_ORION_API_HOST: 0.0.0.0
      PREFECT_ORION_DATABASE_CONNECTION_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}
      PREFECT_ORION_ANALYTICS_ENABLED: "false"
      PREFECT_LOGGING_SERVER_LEVEL: WARNING
      PREFECT_API_URL: http://${PREFECT_HOST}:4200/api
    networks:
      - prefect
  # --------------------------------------#
  #             Docker Agent              #
  # --------------------------------------#
  prefect-agent:
    image: sathyamurthyb4u/prefect-local:2.0.0
    command:
      - prefect
      - agent
      - start
      - ${QUEUE_ID:-}
    depends_on:
      prefect-server:
        condition: service_started
    environment:
      PREFECT_API_URL: http://${PREFECT_HOST}:4200/api
      PREFECT_LOGGING_LEVEL: DEBUG
      DOCKER_HOST: unix://var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - prefect

  # --------------------------------------#
  #         Minio for storage             #
  # --------------------------------------#
  minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=one!one
      - MINIO_ROOT_PASSWORD=one!one
    volumes:
      - /minio:/data
    command: server /data --console-address :9001
    ports:
      - published: 9000
        target: 9000
      - published: 9001
        target: 9001
    networks:
      - prefect
